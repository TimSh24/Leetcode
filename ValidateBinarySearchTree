/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool solve(TreeNode* lroot, TreeNode* rroot){
        
    }
 
    
    bool isSymmetric(TreeNode* root) {
        if(!root) return true;
        if (!root->left && !root->right) return true;
        while(true) {
            bool c = (root->left == root->right);
            if (!c) return false;
            else {
                bool a = root->left->left == root->right->right;
                bool b = root->left->right == root->right->left;
                if(!(a&&b)) return false;
                else {
                    
                }
            }
        }
    }
};
